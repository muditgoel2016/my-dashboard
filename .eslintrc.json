{
  "root": true,
  "env": {
    "browser": true,
    "node": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json", // Add this line
    "tsconfigRootDir": "./" // Ensures correct path resolution
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "jsx-a11y",
    "formatjs",
    "security",
    "jest",
    "jsdoc",
    "optimize-regex",
    "react-perf",
    "import"
  ],
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:jest/recommended",
    "plugin:testing-library/react",
    "plugin:jsdoc/recommended",
    "plugin:security/recommended-legacy",
    "plugin:optimize-regex/recommended",
    "plugin:react-perf/recommended"
  ],
  "globals": {
    "I18n": "readonly",
    "ga": "readonly"
  },
  "overrides": [
    {
      "files": ["./cypress/**/*.js"],
      "rules": { "no-undef": "off" }
    },
    {
      "files": ["*styles.js"],
      "rules": {
        "object-curly-newline": [
          "error",
          {
            "ObjectExpression": { "multiline": true, "minProperties": 5 },
            "ObjectPattern": { "multiline": true, "minProperties": 5 },
            "ImportDeclaration": { "multiline": true, "minProperties": 5 },
            "ExportDeclaration": { "multiline": true, "minProperties": 5 }
          }
        ]
      }
    }
  ],
  "rules": {
    /*
     * Disabled Rules
     */
     "@typescript-eslint/no-unused-vars": "off",
     "@typescript-eslint/no-explicit-any": "off",
     "react/prop-types": "off",
     "react/jsx-uses-react": "off",
     "react/react-in-jsx-scope": "off",
     "react/display-name": "off",
     "@next/next/no-html-link-for-pages": "off",
     "@next/next/no-img-element": "off",
     "@next/next/no-css-tags": "off",
 
     /*
      * TypeScript Rules
      */
     "@typescript-eslint/explicit-function-return-type": [
       "warn",
       {
         "allowExpressions": true,
         "allowTypedFunctionExpressions": true
       }
     ],
     "@typescript-eslint/explicit-module-boundary-types": "warn",
     "@typescript-eslint/no-floating-promises": "error",
     "@typescript-eslint/no-misused-promises": "error",
     "@typescript-eslint/no-unused-expressions": "error",
     "@typescript-eslint/no-unnecessary-type-assertion": "warn",
     "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
     "@typescript-eslint/consistent-type-imports": [
       "warn",
       {
         "prefer": "type-imports",
         "fixStyle": "separate-type-imports"
       }
     ],
     "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
     "@typescript-eslint/prefer-as-const": "warn",
     "@typescript-eslint/prefer-for-of": "warn",
     "@typescript-eslint/prefer-optional-chain": "warn",
     "@typescript-eslint/require-await": "warn",
     "@typescript-eslint/no-shadow": ["error"],
     "@typescript-eslint/no-unnecessary-condition": "warn",
     "@typescript-eslint/prefer-readonly": "warn",
     "@typescript-eslint/prefer-nullish-coalescing": "warn",

    /*
     * Accessibility (a11y) Rules
     */
    "jsx-a11y/alt-text": ["error"],
    "jsx-a11y/label-has-associated-control": ["error", { "assert": "either" }],
    "jsx-a11y/no-autofocus": ["error"],
    "jsx-a11y/no-redundant-roles": "error",
    "jsx-a11y/aria-role": ["error", { "ignoreNonDOM": true }],
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "aspects": ["invalidHref"]
      }
    ],
    "jsx-a11y/click-events-have-key-events": "warn",

    /*
     * Internationalization (i18n)
     */
    "formatjs/no-offset": "error",
    "formatjs/enforce-description": ["error", "literal"],
    "formatjs/no-literal-string-in-jsx": "warn",
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "JSXAttribute[name.name=/^(placeholder|title|alt|label|summary|description|value)$/] > Literal[value=/^[A-Za-z\\s]{2,}/]",
        "message": "Cannot have untranslated text in JSX"
      }
    ],

    /*
     * Performance Rules
     */
    "react-perf/jsx-no-new-object-as-prop": "warn",
    "react-perf/jsx-no-new-array-as-prop": "error",
    "react-perf/jsx-no-jsx-as-prop": "error",
    "react-perf/jsx-no-new-function-as-prop": "warn",

    /*
     * Security Rules
     */
    "security/detect-object-injection": "warn",
    "security/detect-non-literal-fs-filename": "warn",
    "no-alert": "warn",
    "react/no-danger": "error",

    /*
     * Code Quality Rules
     */
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "curly": ["error", "all"],
    "eqeqeq": ["error", "always"],
    "quotes": ["error", "single"],
    "jsx-quotes": ["error", "prefer-single"],
    "react/jsx-closing-bracket-location": ["error", "after-props"],
    "react/jsx-filename-extension": ["error", { "extensions": [".jsx", ".js", ".tsx", ".ts"] }],
    "react/jsx-props-no-spreading": "off",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ]
  }
}
